{% extends 'base.html.twig' %}

{% block title %}Operation index{% endblock %}

{% block body %}

    {% for message in app.flashes('success') %}
        <div class="alert alert-success d-flex align-items-center" role="alert">
            <i class="bi bi-check-circle me-2 text-success"></i>
            <div class="text-success">
                {{ message }}
            </div>
        </div>
    {% endfor %}
    {% for message in app.flashes('error') %}
        <div class="alert alert-danger d-flex align-items-center" role="alert">
            <i class="bi bi-x-circle me-2 text-danger"></i>
            <div class="text-danger">
                {{ message }}
            </div>
        </div>
    {% endfor %}

    <div class="d-flex flex-column w-100 mb-5">
		<h5 class="fw-normal mb-3">
			Opérations Libres
            <span class="badge mini-btn rounded-custom bg-info bg-opacity-10 text-info"> {{operations|filter(operation => operation.statutOperation == 'Libre') | length}}</span>
		</h5>
        <div class="d-flex flex-row justify-content-between flex-wrap">
            {% for operation in operations|filter(operation => operation.statutOperation == 'Libre') %}
                <div class="rounded-custom bg-white d-flex flex-row justify-content-between align-items-center p-4 mb-4" style="min-width: 347px; box-shadow: -4px 0px 0px #C0C0C0, 0px 2px 28px rgba(58, 59, 69, 0.01);">
                    <div>
                        <h5>{{ operation.libelle }}</h5>
                        <p class="text-dark text-opacity-50">
                        {% for client in operation.clients %}
                        Client: <span class="text-primary text-opacity-75">{{ client }}</span>
                        {% endfor %}
                        {# {{ operation.typeOperation.prix|number_format(0, '.', ' ') }}€ #}
                        </p>
                    </div>
                    <i class="bi bi-info-circle fs-1 text-info text-opacity-25 cursor-pointer" data-bs-toggle="modal" data-bs-target="#operationLibre_{{ operation.id }}"></i>
                </div>
                <!-- Modal -->
                <div class="modal fade" id="operationLibre_{{ operation.id }}" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true" style="min-width: 347px>
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content border-0 rounded-custom shadow-modal p-3">
                    <div class="modal-header d-flex flex-row justify-content-between align-items-start">
                        <div class="d-flex flex-column">
                            <h5 class="modal-title text-secondary" id="staticBackdropLabel">{{ operation.libelle }}</h5>
                            <p class="text-dark text-opacity-50">{{ operation.description }}</p>
                        </div>
                        <div class="d-flex flex-row align-items-start h-100">
                        <p data-toggle="tooltip" title="Hooray!" class="px-2">Statut d'operation</p>
                        <i class="bi bi-dash-circle-dotted text-dark text-opacity-50" data-bs-dismiss="modal" aria-label="Close"w></i>
                        {# <button type="button" class="btn-close" id="example" data-bs-dismiss="modal" aria-label="Close" data-bs-toggle="tooltip" data-bs-placement="right" title="Tooltip on right"></button> #}
                    
                        </div>
                    </div>
                    <div class="modal-body d-flex flex-column ">
                        <h5>Details</h5>
                        {% for client in operation.clients %}
                        <p>Client: <span class="text-secondary">{{ client }}</span></p>
                        {% endfor %}
                        <p>Prestataire: <span class="text-secondary">{{ operation.utilisateur }}</span></p>
                        <p>Type d'opération: <span class="text-secondary">{{ operation.typeOperation }}</span></p>
                        <p>Buget: <span class="text-secondary">{{ operation.typeOperation.prix|number_format(0, '.', ' ') }}€</span></p>
                    </div>
                    <div class="modal-footer">
                    {% if is_granted('ROLE_EXPERT') %}
                        {{ include('operation/_delete_form.html.twig') }}
                        <button onclick="window.location.href='{{ path('operation_edit', {'id': operation.id}) }}';"  class="btn bg-info bg-opacity-10 text-info rounded-custom px-3 d-flex align-items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-pen-fill mr-2" viewBox="0 0 16 16">
								<path d="m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001z"/>
							</svg>
                            Modifier
                        </button>
                    {% endif %}

                    {% if nombreOperation != maxOperation %}
                        {{ include('operation/_reserved_form.html.twig') }}
                    {% endif %}
                    
                    </div>
                    </div>
                </div>
                </div>
            {% endfor %}
            {% if is_granted('ROLE_EXPERT') %}
            <button class="bg-transparent rounded-custom border-secondary border-2 d-flex flex-row justify-content-center align-items-center p-4 mb-4 opacity-50" style="min-width: 347px; border-style: dashed;" data-bs-toggle="modal" data-bs-target="#operationAjout" onclick="modalAjout()">
                    <svg xmlns="http://www.w3.org/2000/svg" width="52" height="52" fill="currentColor" class="bi bi-plus text-success" viewBox="0 0 16 16">
                        <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
                    </svg>
            </button>
            <!-- Modal -->
            <div class="modal fade" id="operationAjout" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-size-custom">
                    <div class="modal-content border-0 rounded-custom shadow-modal p-3">
                        <div class="modal-header d-flex flex-row justify-content-end align-items-start border-0">
                            <div class="d-flex flex-row align-items-start h-100">
                                <button type="button" class="btn bg-danger p-1 rounded-custom text-danger bg-opacity-10" data-bs-dismiss="modal" aria-label="Close">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
                                        <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
                                    </svg>
                                </button>
                            </div>
                        </div>
                        <div class="modal-body d-flex justify-content-between flex-row mb-4 mx-4 ">
                            <div class="d-flex flex-column justify-content-between align-items-center px-2" style="min-height: 440px" id="divStep">
                                
                            </div>
                            <div class="d-flex flex-column w-100 mx-3 px-4" >
                                {# Futur modal step ne pas suprimer #}
                                

                                {{ include('operation/new.html.twig') }}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            {% endif %}
        </div>
	</div>

    <div class="d-flex flex-column w-100 mb-5">
		<h5 class="fw-normal mb-3">
			Opérations En Cours
            <span class="badge mini-btn rounded-custom bg-warning bg-opacity-10 text-warning"> {{operations|filter((operation, userid) => operation.statutOperation == 'En cours' and  (operation.utilisateur.id == app.user.id or is_granted('ROLE_EXPERT')) ) | length}}</span>
		</h5>

        <div class="d-flex flex-row justify-content-between flex-wrap">

           
            {% set newArrayUtilisateur = [] %}
            {% for operation in operations|filter(operation => operation.statutOperation == 'En cours' and  (operation.utilisateur.id == app.user.id or is_granted('ROLE_EXPERT')) )|sort((a, b) => a.utilisateur <=> b.utilisateur) %}

                {% if operation.utilisateur not in  newArrayUtilisateur and is_granted('ROLE_EXPERT') %}
                    <p class="col-12 pb-3">{{operation.utilisateur}} : 
                        <span class="badge mini-btn rounded-custom bg-warning bg-opacity-10 text-warning"> {{operations|filter(op => op.statutOperation == 'En cours' and op.utilisateur.id == operation.utilisateur.id) | length}}</span>
                    </p>
                {% set newArrayUtilisateur = newArrayUtilisateur|merge([operation.utilisateur]) %}
                {% endif %}
    
                <div class="rounded-custom bg-white d-flex flex-row justify-content-between align-items-center p-4 mb-4" style="min-width: 347px; box-shadow: -4px 0px 0px #FFC700, 0px 2px 28px rgba(58, 59, 69, 0.01);">
                    <div>
                        <h5>{{ operation.libelle }}</h5>
                        <p class="text-dark text-opacity-50">
                            Client: <span class="text-primary text-opacity-75">{{ operation.clients|join }}</span>
                        </p>
                    </div>
                    <i class="bi bi-info-circle fs-1 text-info text-opacity-25 cursor-pointer" data-bs-toggle="modal" data-bs-target="#operationEnCours_{{ operation.id }}"></i>
                </div>
                <!-- Modal -->
                <div class="modal fade" id="operationEnCours_{{ operation.id }}"  tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content border-0 rounded-custom shadow-modal p-3">
                    <div class="modal-header d-flex flex-row justify-content-between align-items-start">
                        <div class="d-flex flex-column">
                            <h5 class="modal-title text-secondary" id="staticBackdropLabel">{{ operation.libelle }}</h5>
                            <p class="text-dark text-opacity-50">{{ operation.description }}</p>
                        </div>
                        <div class="d-flex flex-row align-items-start h-100">
                        <p data-toggle="tooltip" title="Hooray!" class="px-2">Statut d'operation</p>
                        <i class="bi bi-clock-fill text-warning" data-bs-dismiss="modal" aria-label="Close"></i>
                        {# <button type="button" class="btn-close" id="example" data-bs-dismiss="modal" aria-label="Close" data-bs-toggle="tooltip" data-bs-placement="right" title="Tooltip on right"></button> #}
                    
                        </div>
                    </div>
                    <div class="modal-body d-flex flex-column ">
                        <h5>Details</h5>
                        {% for client in operation.clients %}
                        <p>Client: <span class="text-secondary">{{ client }}</span></p>
                        {% endfor %}
                        <p>Prestataire: <span class="text-secondary">{{ operation.utilisateur }}</span></p>
                        <p>Type d'opération: <span class="text-secondary">{{ operation.typeOperation }}</span></p>
                        <p>Buget: <span class="text-secondary">{{ operation.typeOperation.prix|number_format(0, '.', ' ') }}€</span></p>
                    </div>
                    <div class="modal-footer">
                    {% if is_granted('ROLE_EXPERT') %}
                        {{ include('operation/_delete_form.html.twig') }}
                        <button onclick="window.location.href='{{ path('operation_edit', {'id': operation.id}) }}';"  class="btn bg-info bg-opacity-10 text-info rounded-custom px-3 d-flex align-items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-pen-fill mr-2" viewBox="0 0 16 16">
								<path d="m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001z"/>
							</svg>
                            Modifier
                        </button>
                    {% endif %}
                        {{ include('operation/_finish_form.html.twig') }}
                    </div>
                    </div>
                </div>
                </div>
            {% else %}
            <p>Pas d'opération en cours</p>
            
            {% endfor %}
        </div>
	</div>

     <div class="d-flex flex-column w-100 mb-5">
		<h5 class="fw-normal mb-3">
			Opérations terminées
            <span class="badge mini-btn rounded-custom bg-success bg-opacity-10 text-success"> {{operations|filter((operation, userid) => operation.statutOperation == 'Terminée' and  (operation.utilisateur.id == app.user.id or is_granted('ROLE_EXPERT')) ) | length}}</span>
		</h5>
        <div class="d-flex flex-row justify-content-between flex-wrap">
            {% set newArrayUtilisateur = [] %}
            {% for operation in operations|filter(operation => operation.statutOperation == 'Terminée' and  (operation.utilisateur.id == app.user.id or is_granted('ROLE_EXPERT')) )|sort((a, b) => a.utilisateur <=> b.utilisateur) %} 
                {% if operation.utilisateur not in  newArrayUtilisateur and is_granted('ROLE_EXPERT')  %}
                <p class="col-12 pb-3">{{operation.utilisateur}} : 
                    <span class="badge mini-btn rounded-custom bg-success bg-opacity-10 text-success"> {{operations|filter(op => op.statutOperation == 'Terminée' and op.utilisateur.id == operation.utilisateur.id) | length}}</span>
                </p>
                {% set newArrayUtilisateur = newArrayUtilisateur|merge([operation.utilisateur]) %}
                {% endif %}
            <div class="rounded-custom bg-white d-flex flex-row justify-content-between align-items-center p-4 mb-4" style="min-width: 347px; box-shadow: -4px 0px 0px #20D489, 0px 2px 28px rgba(58, 59, 69, 0.01);">
                <div>
                    <h5>{{ operation.libelle }}</h5>
                    <p class="text-dark text-opacity-50">
                    Client: <span class="text-primary text-opacity-75">{{ operation.clients|join }}</span>
                    </p>
                </div>
                <i class="bi bi-info-circle fs-1 text-info text-opacity-25 cursor-pointer" data-bs-toggle="modal" data-bs-target="#operationTerminee_{{ operation.id }}"></i>
            </div>
            <!-- Modal -->
            <div class="modal fade" id="operationTerminee_{{ operation.id }}" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content border-0 rounded-custom shadow-modal p-3">
                <div class="modal-header d-flex flex-row justify-content-between align-items-start">
                    <div class="d-flex flex-column">
                        <h5 class="modal-title text-secondary" id="staticBackdropLabel">{{ operation.libelle }}</h5>
                        <p class="text-dark text-opacity-50">{{ operation.description }}</p>
                    </div>
                    <div class="d-flex flex-row align-items-start h-100">
                    <p data-toggle="tooltip" title="Hooray!" class="px-2">Statut d'operation</p>
                    <i class="bi bi-check-circle-fill text-success" data-bs-dismiss="modal" aria-label="Close"w></i>
                    {# <button type="button" class="btn-close" id="example" data-bs-dismiss="modal" aria-label="Close" data-bs-toggle="tooltip" data-bs-placement="right" title="Tooltip on right"></button> #}
                   
                    </div>
                </div>
                <div class="modal-body d-flex flex-column ">
                    <h5>Details</h5>
                    {% for client in operation.clients %}
                    <p>Client: <span class="text-secondary">{{ client }}</span></p>
                    {% endfor %}
                    <p>Prestataire: <span class="text-secondary">{{ operation.utilisateur }}</span></p>
                    <p>Type d'opération: <span class="text-secondary">{{ operation.typeOperation }}</span></p>
                    <p>Buget: <span class="text-secondary">{{ operation.typeOperation.prix|number_format(0, '.', ' ') }}€</span></p>
                </div>
                {% if is_granted('ROLE_EXPERT') %}
                <div class="modal-footer">
                    {{ include('operation/_delete_form.html.twig') }}
                    <button onclick="window.location.href='{{ path('operation_edit', {'id': operation.id}) }}';"  class="btn bg-info bg-opacity-10 text-info rounded-custom px-3 d-flex align-items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-pen-fill mr-2" viewBox="0 0 16 16">
								<path d="m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001z"/>
							</svg>
                            Modifier
                        </button>
                </div>
                {% endif %}
                </div>
            </div>
            </div>
        {% else %}
        <p>Pas d'opération terminée</p>
        
        {% endfor %}
        </div>
	</div>

<div id="html"></div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
	{{ encore_entry_script_tags('modalOperationAjout') }}
    <script>
    const DIV_STEP = document.getElementById('divStep');
    const DIV_BODY = document.getElementById('divBody');
    const DIV_BTN  = document.getElementById('divBtn');
    
    // charger les étapes
    // afficher la premier partie du formulaire
    // bouton pour l'étape suivante *4
    // modifier les étapes *5
    // afficher la sa suite du formulaire *4
    // bouton pour validé

    var stepList = [
                {'id': 1, 'libelle': "Initialisation" , 'description': "Nom et déscription de l’opération"  , 'step': true },
                {'id': 2, 'libelle': "Budget"         , 'description': "Type de budget de l’opération"      , 'step': false},
                {'id': 3, 'libelle': "Client"         , 'description': "Client pour l’opération"            , 'step': false},
                {'id': 4, 'libelle': "Prestataire"    , 'description': "Utilisateur affecter à l'opération" , 'step': false},
                {'id': 5, 'libelle': "Récapitulatif"  , 'description': "Examiner et soumettre "             , 'step': false}
            ];
    var step;
    var btnNext = document.createElement('btn');
    var btnPrevious = document.createElement('btn');
    var btnSubmit = document.createElement('button');
    
    function modalAjout() {

        step = 0;
        btnPrevious.id = 'btnPrevious';
        btnPrevious.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-arrow-left-short mr-1 fw-bold" viewBox="0 0 16 16">
                                    <path fill-rule="evenodd" d="M12 8a.5.5 0 0 1-.5.5H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5a.5.5 0 0 1 .5.5z"/>
                                 </svg>
                                 Précédent
                                 `;
        btnPrevious.className = 'btn bg-secondary bg-opacity-25 text-secondary rounded-custom px-3 fw-bold  align-items-center';
        DIV_BTN.appendChild(btnPrevious);

        btnNext.id = 'btnNext';
        btnNext.innerHTML = `Suivant
                             <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-arrow-right-short ml-1" viewBox="0 0 16 16">
                             <path fill-rule="evenodd" d="M4 8a.5.5 0 0 1 .5-.5h5.793L8.146 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L10.293 8.5H4.5A.5.5 0 0 1 4 8z"/>
                             </svg>
                             `;
        btnNext.className = 'btn btn-success text-white rounded-custom px-3 fw-bold  align-items-center';
        DIV_BTN.appendChild(btnNext);

        btnSubmit.id = 'btnSubmit';
        btnSubmit.innerHTML = 'Valider';
        btnSubmit.form = 'operationAjoutForm';
        btnSubmit.className = 'btn btn-success text-white rounded-custom px-3 fw-bold';
        DIV_BTN.appendChild(btnSubmit);
        for (let index = 1; index < 5; index++) {

            stepList[index].step = false;
            document.getElementById('step_'+(index+1)).style.display = "none"; 
        }
        // document.getElementById('btnSubmit').style.display  = "none";
        showStep();
        showForm(step);
        showBtn(step);
    };

    function checkStep(step) { 
        showBtn(step);
        showStep();
        showForm(step)
    }
    function showStep() {

        DIV_STEP.innerHTML = "";
        stepList.forEach(element => {

            if (element.step) {

                DIV_STEP.innerHTML += `<div class="d-flex flex-rox justify-content-start align-items-center" style="width: 300px;">
                                        <div class="bg-secondary rounded-custom text-secondary bg-opacity-10 d-flex justify-content-center align-items-center" style="width: 48px; height: 48px">
                                            <p class="fs-5">${element.id}</p>
                                        </div>
                                        <div style="margin-left: 20px">
                                            <p class="fw-bold">${element.libelle}</p>
                                            <p class="text-dark text-opacity-50" style="font-size: 14px;">${element.description}</p>
                                        </div>
                                    </div>`;
            } else {

                DIV_STEP.innerHTML += `<div class="d-flex flex-rox justify-content-start align-items-center" style="width: 300px;">
                                        <div class="bg-dark rounded-custom text-dark bg-opacity-10 d-flex justify-content-center align-items-center" style="width: 48px; height: 48px">
                                            <p class="fs-5">${element.id}</p>
                                        </div>
                                        <div style="margin-left: 20px">
                                            <p class="fw-bold">${element.libelle}</p>
                                            <p class="text-dark text-opacity-50" style="font-size: 14px;">${element.description}</p>
                                        </div>
                                    </div>`;
            }
        });
    }

    function showForm(step) {
        step += 1;
        switch (step) {
            case 1:
                document.getElementById('step_'+step).style.display  = "block"; 
                document.getElementById('step_'+(step+1)).style.display  = "none";
                document.getElementById('step_'+(step+2)).style.display  = "none";
                document.getElementById('step_'+(step+3)).style.display  = "none";
                document.getElementById('step_'+(step+4)).style.display  = "none";
                break;
            case 2:
                document.getElementById('step_'+step).style.display  = "block"; 
                document.getElementById('step_'+(step+1)).style.display  = "none";
                document.getElementById('step_'+(step+2)).style.display  = "none";
                document.getElementById('step_'+(step+3)).style.display  = "none";
                document.getElementById('step_'+(step-1)).style.display  = "none";
                break;
            case 3:
                document.getElementById('step_'+step).style.display  = "block"; 
                document.getElementById('step_'+(step+1)).style.display  = "none";
                document.getElementById('step_'+(step+2)).style.display  = "none";
                document.getElementById('step_'+(step-1)).style.display  = "none";
                document.getElementById('step_'+(step-2)).style.display  = "none";
                break;
            case 4:
                document.getElementById('step_'+step).style.display  = "block"; 
                document.getElementById('step_'+(step+1)).style.display  = "none";
                document.getElementById('step_'+(step-1)).style.display  = "none";
                document.getElementById('step_'+(step-2)).style.display  = "none";
                document.getElementById('step_'+(step-3)).style.display  = "none";
                break;
            case 5:
                document.getElementById('step_'+step).style.display  = "block"; 
                document.getElementById('step_'+(step-1)).style.display  = "none";
                document.getElementById('step_'+(step-2)).style.display  = "none";
                document.getElementById('step_'+(step-3)).style.display  = "none";
                document.getElementById('step_'+(step-4)).style.display  = "none";
                document.getElementById('step_'+step).innerHTML = `
                <div class="h-100 w-100 d-flex flex-column justify-content-between">
                <p class="fs-1 fw-bold">Récapitulatif</p>
                    <div>
                        <p class="fs-6 fw-bold">Initialisation</p>
                        <p class="text-dark text-opacity-50">${document.getElementById('operation_libelle').value}</p>
                        <p class="text-dark text-opacity-50">${document.getElementById('operation_description').value}</p>
                    </div>
                    <div>
                        <p class="fs-6 fw-bold">Budget</p>
                        <p class="text-dark text-opacity-50">${document.getElementById('operation_typeOperation').value}</p>
                    </div>
                    <div>
                        <p class="fs-6 fw-bold">Client</p>
                        <p class="text-dark text-opacity-50">${document.getElementById('operation_clients').value}</p>
                    </div>
                    <div>
                        <p class="fs-6 fw-bold">Prestataire</p>
                        <p class="text-dark text-opacity-50">${document.getElementById('operation_utilisateur').value}</p>
                    </div>
                </div>`;
                break;
        }
    }

    function showBtn(step) {
        if (step <= 0) {

            document.getElementById('btnNext').style.display  = "block";
            document.getElementById('btnPrevious').style.visibility  = "hidden";
            document.getElementById('btnSubmit').style.display  = "none";
        }else if (step >= 1 && step <= 3) {

            document.getElementById('btnNext').style.display  = "block";
            document.getElementById('btnPrevious').style.visibility  = "visible";
            document.getElementById('btnSubmit').style.display  = "none";
        } else {
            document.getElementById('btnNext').style.display  = "none";
            document.getElementById('btnPrevious').style.visibility  = "visible";
            document.getElementById('btnSubmit').style.display  = "block";
        }
    }

    btnNext.addEventListener('click', event => {

        step += 1
        stepList[step].step = true;
        checkStep(step)
    });

    btnPrevious.addEventListener('click', event => {

        
        stepList[step].step = false;
        step -= 1
        checkStep(step)
    });

    btnSubmit.addEventListener('click', event => {
        let libelle = document.getElementById('operation_libelle').value;
        let description = document.getElementById('operation_description').value;
        let typeOperation = document.getElementById('operation_typeOperation').value;
        let clients = document.getElementById('operation_clients').value;
        let utilisateur = document.getElementById('operation_utilisateur').value;
    });
    </script>
{% endblock %}